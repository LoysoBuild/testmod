package com.test_project;

import com.test_project.blocks.ModBlocks;
import com.test_project.combat.CombatEventHandler;
import com.test_project.combat.stance.NetworkManager;
import com.test_project.entity.ModEntities;
import com.test_project.entity.TestMobEntity;
import com.test_project.entity.list.MirrorPlayerEntity;
import com.test_project.items.EquipmentEventHandler;
import com.test_project.items.ModItems;
import net.minecraft.world.item.CreativeModeTabs;
import net.neoforged.bus.api.IEventBus;
import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.fml.ModContainer;
import net.neoforged.fml.common.Mod;
import net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent;
import net.neoforged.neoforge.common.NeoForge;
import net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent;
import net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent;
import net.neoforged.neoforge.event.server.ServerStartingEvent;
import org.slf4j.Logger;
import com.mojang.logging.LogUtils;

@Mod(MainMod.MOD_ID)
public final class MainMod {
    public static final String MOD_ID = "mainmod"; // Оставляем как у вас
    private static final Logger LOGGER = LogUtils.getLogger();

    public MainMod(IEventBus modEventBus, ModContainer modContainer) {
        LOGGER.info("Loading {}...", MOD_ID);

        // Регистрация основных компонентов
        ModItems.register(modEventBus);
        ModBlocks.register(modEventBus);
        ModEntities.register(modEventBus);

        // Регистрация событий
        modEventBus.addListener(NetworkManager::registerPackets);
        NeoForge.EVENT_BUS.register(CombatEventHandler.class);
        NeoForge.EVENT_BUS.register(EquipmentEventHandler.class);

        // Lifecycle события
        modEventBus.addListener(this::commonSetup);
        modEventBus.addListener(this::addCreative);
        modEventBus.addListener(this::registerEntityAttributes);

        LOGGER.info("Successfully initialized {}", MOD_ID);
    }

    private void commonSetup(final FMLCommonSetupEvent event) {
        LOGGER.debug("Common setup for {}", MOD_ID);
    }

    private void addCreative(BuildCreativeModeTabContentsEvent event) {
        if (event.getTabKey() == CreativeModeTabs.COMBAT) {
            event.accept(ModItems.GONDOR_SWORD.get());
            event.accept(ModItems.GONDOR_AXE.get());
        }

        if (event.getTabKey() == CreativeModeTabs.INGREDIENTS) {
            event.accept(ModItems.STEEL.get());
            event.accept(ModItems.ORC_STEEL.get());
        }

        if (event.getTabKey() == CreativeModeTabs.SPAWN_EGGS) {
            event.accept(ModItems.TEST_MOB_SPAWN_EGG.get());
            event.accept(ModItems.MIRROR_PLAYER_SPAWN_EGG.get());
        }

        if (event.getTabKey() == CreativeModeTabs.BUILDING_BLOCKS) {
            event.accept(ModBlocks.STEEL_BLOCK.get());
            event.accept(ModBlocks.STEEL_ORE.get());
        }
    }

    private void registerEntityAttributes(EntityAttributeCreationEvent event) {
        event.put(ModEntities.TEST_MOB.get(), TestMobEntity.createAttributes().build());
        event.put(ModEntities.MIRROR_PLAYER.get(), MirrorPlayerEntity.createAttributes().build());
    }

    @SubscribeEvent
    public void onServerStarting(ServerStartingEvent event) {
        LOGGER.debug("Server starting with {}", MOD_ID);
    }
}
